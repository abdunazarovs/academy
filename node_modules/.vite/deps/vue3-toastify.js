import {
  Fragment,
  cloneVNode,
  computed,
  createApp,
  createVNode,
  defineComponent,
  h,
  isVNode,
  mergeProps,
  nextTick,
  onMounted,
  onUnmounted,
  reactive,
  ref,
  toRaw,
  watchEffect
} from "./chunk-X72XCBY2.js";
import "./chunk-WC5NP67Y.js";

// node_modules/vue3-toastify/dist/esm/index.js
var w = {
  TOP_LEFT: "top-left",
  TOP_RIGHT: "top-right",
  TOP_CENTER: "top-center",
  BOTTOM_LEFT: "bottom-left",
  BOTTOM_RIGHT: "bottom-right",
  BOTTOM_CENTER: "bottom-center"
};
var $ = {
  LIGHT: "light",
  DARK: "dark",
  COLORED: "colored",
  AUTO: "auto"
};
var g = {
  INFO: "info",
  SUCCESS: "success",
  WARNING: "warning",
  ERROR: "error",
  DEFAULT: "default"
};
var Te = {
  BOUNCE: "bounce",
  SLIDE: "slide",
  FLIP: "flip",
  ZOOM: "zoom"
};
var re = {
  dangerouslyHTMLString: false,
  multiple: true,
  position: w.TOP_RIGHT,
  autoClose: 5e3,
  transition: "bounce",
  hideProgressBar: false,
  pauseOnHover: true,
  pauseOnFocusLoss: true,
  closeOnClick: true,
  className: "",
  bodyClassName: "",
  style: {},
  progressClassName: "",
  progressStyle: {},
  role: "alert",
  theme: "light"
};
var pe = {
  rtl: false,
  newestOnTop: false,
  toastClassName: ""
};
var ie = {
  ...re,
  ...pe
};
({
  ...re,
  type: g.DEFAULT
});
var r = ((e) => (e[e.COLLAPSE_DURATION = 300] = "COLLAPSE_DURATION", e[e.DEBOUNCE_DURATION = 50] = "DEBOUNCE_DURATION", e.CSS_NAMESPACE = "Toastify", e))(r || {});
var K = ((e) => (e.ENTRANCE_ANIMATION_END = "d", e))(K || {});
var Ae = {
  enter: "Toastify--animate Toastify__bounce-enter",
  exit: "Toastify--animate Toastify__bounce-exit",
  appendPosition: true
};
var Ne = {
  enter: "Toastify--animate Toastify__slide-enter",
  exit: "Toastify--animate Toastify__slide-exit",
  appendPosition: true
};
var Ie = {
  enter: "Toastify--animate Toastify__zoom-enter",
  exit: "Toastify--animate Toastify__zoom-exit"
};
var _e = {
  enter: "Toastify--animate Toastify__flip-enter",
  exit: "Toastify--animate Toastify__flip-exit"
};
function le(e) {
  let t = Ae;
  if (!e || typeof e == "string")
    switch (e) {
      case "flip":
        t = _e;
        break;
      case "zoom":
        t = Ie;
        break;
      case "slide":
        t = Ne;
        break;
    }
  else
    t = e;
  return t;
}
function he(e) {
  return e.containerId || String(e.position);
}
var j = "will-unmount";
function Oe(e = w.TOP_RIGHT) {
  return !!document.querySelector(`.${r.CSS_NAMESPACE}__toast-container--${e}`);
}
function Pe(e = w.TOP_RIGHT) {
  return `${r.CSS_NAMESPACE}__toast-container--${e}`;
}
function be(e, t, n = false) {
  const o = [
    `${r.CSS_NAMESPACE}__toast-container`,
    `${r.CSS_NAMESPACE}__toast-container--${e}`,
    n ? `${r.CSS_NAMESPACE}__toast-container--rtl` : null
  ].filter(Boolean).join(" ");
  return L(t) ? t({
    position: e,
    rtl: n,
    defaultClassName: o
  }) : `${o} ${t || ""}`;
}
function Le(e) {
  var y;
  const { position: t, containerClassName: n, rtl: o = false, style: a = {} } = e, s = r.CSS_NAMESPACE, d = Pe(t), E = document.querySelector(`.${s}`), u = document.querySelector(`.${d}`), C = !!u && !((y = u.className) != null && y.includes(j)), c = E || document.createElement("div"), v = document.createElement("div");
  v.className = be(
    t,
    n,
    o
  ), v.dataset.testid = `${r.CSS_NAMESPACE}__toast-container--${t}`, v.id = he(e);
  for (const A in a)
    if (Object.prototype.hasOwnProperty.call(a, A)) {
      const Q = a[A];
      v.style[A] = Q;
    }
  return E || (c.className = r.CSS_NAMESPACE, document.body.appendChild(c)), C || c.appendChild(v), v;
}
function Y(e) {
  var o, a, s;
  const t = typeof e == "string" ? e : ((o = e.currentTarget) == null ? void 0 : o.id) || ((a = e.target) == null ? void 0 : a.id), n = document.getElementById(t);
  n && n.removeEventListener("animationend", Y, false);
  try {
    R[t].unmount(), (s = document.getElementById(t)) == null || s.remove(), delete R[t], delete f[t];
  } catch {
  }
}
var R = reactive({});
function $e(e, t) {
  const n = document.getElementById(String(t));
  n && (R[n.id] = e);
}
function Z(e, t = true) {
  const n = String(e);
  if (!R[n])
    return;
  const o = document.getElementById(n);
  o && o.classList.add(j), t ? (qe(e), o && o.addEventListener("animationend", Y, false)) : Y(n), p.items = p.items.filter((a) => a.containerId !== e);
}
function Be(e) {
  for (const t in R)
    Z(t, e);
  p.items = [];
}
function ue(e, t) {
  const n = document.getElementById(e.toastId);
  if (n) {
    let o = e;
    o = {
      ...o,
      ...le(o.transition)
    };
    const a = o.appendPosition ? `${o.exit}--${o.position}` : o.exit;
    n.className += ` ${a}`, t && t(n);
  }
}
function qe(e) {
  for (const t in f)
    if (t === e)
      for (const n of f[t] || [])
        ue(n);
}
function Me(e) {
  const n = x().find((o) => o.toastId === e);
  return n == null ? void 0 : n.containerId;
}
function ne(e) {
  return document.getElementById(e);
}
function Re(e) {
  const t = ne(e.containerId);
  return t && t.classList.contains(j);
}
function oe(e) {
  var n;
  const t = isVNode(e.content) ? toRaw(e.content.props) : null;
  return t != null ? t : toRaw((n = e.data) != null ? n : {});
}
function Fe(e) {
  return e ? p.items.filter((n) => n.containerId === e).length > 0 : p.items.length > 0;
}
function we() {
  if (p.items.length > 0) {
    const e = p.items.shift();
    X(e == null ? void 0 : e.toastContent, e == null ? void 0 : e.toastProps);
  }
}
var f = reactive({});
var p = reactive({
  items: []
});
function x() {
  const e = toRaw(f);
  return Object.values(e).reduce((t, n) => [...t, ...n], []);
}
function xe(e) {
  return x().find((n) => n.toastId === e);
}
function X(e, t = {}) {
  if (Re(t)) {
    const n = ne(t.containerId);
    n && n.addEventListener("animationend", J.bind(null, e, t), false);
  } else
    J(e, t);
}
function J(e, t = {}) {
  const n = ne(t.containerId);
  n && n.removeEventListener("animationend", J.bind(null, e, t), false);
  const o = f[t.containerId] || [], a = o.length > 0;
  if (!a && !Oe(t.position)) {
    const s = Le(t), d = createApp(ot, t);
    d.mount(s), $e(d, s.id);
  }
  a && (t.position = o[0].position), nextTick(() => {
    t.updateId ? N.update(t) : N.add(e, t);
  });
}
var N = {
  /**
   * add a toast
   * @param _ ..
   * @param opts toast props
   */
  add(e, t) {
    const { containerId: n = "" } = t;
    n && (f[n] = f[n] || [], f[n].find((o) => o.toastId === t.toastId) || setTimeout(() => {
      var o, a;
      t.newestOnTop ? (o = f[n]) == null || o.unshift(t) : (a = f[n]) == null || a.push(t), t.onOpen && t.onOpen(oe(t));
    }, t.delay || 0));
  },
  /**
   * remove a toast
   * @param id toastId
   */
  remove(e) {
    if (e) {
      const t = Me(e);
      if (t) {
        const n = f[t];
        let o = n.find((a) => a.toastId === e);
        f[t] = n.filter((a) => a.toastId !== e), !f[t].length && !Fe(t) && Z(t, false), we(), nextTick(() => {
          o != null && o.onClose && (o.onClose(oe(o)), o = void 0);
        });
      }
    }
  },
  /**
   * update the toast
   * @param opts toast props
   */
  update(e = {}) {
    const { containerId: t = "" } = e;
    if (t && e.updateId) {
      f[t] = f[t] || [];
      const n = f[t].find((o) => o.toastId === e.toastId);
      n && setTimeout(() => {
        for (const o in e)
          if (Object.prototype.hasOwnProperty.call(e, o)) {
            const a = e[o];
            n[o] = a;
          }
      }, e.delay || 0);
    }
  },
  /**
   * clear all toasts in container.
   * @param containerId container id
   */
  clear(e, t = true) {
    e ? Z(e, t) : Be(t);
  },
  dismissCallback(e) {
    var o;
    const t = (o = e.currentTarget) == null ? void 0 : o.id, n = document.getElementById(t);
    n && (n.removeEventListener("animationend", N.dismissCallback, false), setTimeout(() => {
      N.remove(t);
    }));
  },
  dismiss(e) {
    if (e) {
      const t = x();
      for (const n of t)
        if (n.toastId === e) {
          ue(n, (o) => {
            o.addEventListener("animationend", N.dismissCallback, false);
          });
          break;
        }
    }
  }
};
var de = reactive({});
function ce() {
  return Math.random().toString(36).substring(2, 9);
}
function De(e) {
  return typeof e == "number" && !isNaN(e);
}
function ee(e) {
  return typeof e == "string";
}
function L(e) {
  return typeof e == "function";
}
function G(...e) {
  return mergeProps(...e);
}
function k(e) {
  return typeof e == "object" && (!!(e != null && e.render) || !!(e != null && e.setup) || typeof (e == null ? void 0 : e.type) == "object");
}
function Ue(e = {}) {
  de[`${r.CSS_NAMESPACE}-default-options`] = e;
}
function ke() {
  return de[`${r.CSS_NAMESPACE}-default-options`] || ie;
}
function He() {
  return document.documentElement.classList.contains("dark") ? "dark" : "light";
}
var H = ((e) => (e[e.Enter = 0] = "Enter", e[e.Exit = 1] = "Exit", e))(H || {});
var fe = {
  containerId: {
    type: [String, Number],
    required: false,
    default: ""
  },
  dangerouslyHTMLString: {
    type: Boolean,
    required: false,
    default: false
  },
  multiple: {
    type: Boolean,
    required: false,
    default: true
  },
  limit: {
    type: Number,
    required: false,
    default: void 0
  },
  position: {
    type: String,
    required: false,
    default: w.TOP_LEFT
  },
  bodyClassName: {
    type: String,
    required: false,
    default: ""
  },
  autoClose: {
    type: [Number, Boolean],
    required: false,
    default: false
  },
  closeButton: {
    type: [Boolean, Function, Object],
    required: false,
    default: void 0
  },
  transition: {
    type: [String, Object],
    required: false,
    default: "bounce"
  },
  hideProgressBar: {
    type: Boolean,
    required: false,
    default: false
  },
  pauseOnHover: {
    type: Boolean,
    required: false,
    default: true
  },
  pauseOnFocusLoss: {
    type: Boolean,
    required: false,
    default: true
  },
  closeOnClick: {
    type: Boolean,
    required: false,
    default: true
  },
  progress: {
    type: Number,
    required: false,
    default: void 0
  },
  progressClassName: {
    type: String,
    required: false,
    default: ""
  },
  toastStyle: {
    type: Object,
    required: false,
    default() {
      return {};
    }
  },
  progressStyle: {
    type: Object,
    required: false,
    default() {
      return {};
    }
  },
  role: {
    type: String,
    required: false,
    default: "alert"
  },
  theme: {
    type: String,
    required: false,
    default: $.AUTO
  },
  content: {
    type: [String, Object, Function],
    required: false,
    default: ""
  },
  toastId: {
    type: [String, Number],
    required: false,
    default: ""
  },
  data: {
    type: [Object, String],
    required: false,
    default() {
      return {};
    }
  },
  type: {
    type: String,
    required: false,
    default: g.DEFAULT
  },
  icon: {
    type: [Boolean, String, Number, Object, Function],
    required: false,
    default: void 0
  },
  delay: {
    type: Number,
    required: false,
    default: void 0
  },
  onOpen: {
    type: Function,
    required: false,
    default: void 0
  },
  onClose: {
    type: Function,
    required: false,
    default: void 0
  },
  onClick: {
    type: Function,
    required: false,
    default: void 0
  },
  isLoading: {
    type: Boolean,
    required: false,
    default: void 0
  },
  rtl: {
    type: Boolean,
    required: false,
    default: false
  },
  toastClassName: {
    type: String,
    required: false,
    default: ""
  },
  updateId: {
    type: [String, Number],
    required: false,
    default: ""
  }
};
var ze = {
  autoClose: {
    type: [Number, Boolean],
    required: true
  },
  isRunning: {
    type: Boolean,
    required: false,
    default: void 0
  },
  type: {
    type: String,
    required: false,
    default: g.DEFAULT
  },
  theme: {
    type: String,
    required: false,
    default: $.AUTO
  },
  hide: {
    type: Boolean,
    required: false,
    default: void 0
  },
  className: {
    type: [String, Function],
    required: false,
    default: ""
  },
  controlledProgress: {
    type: Boolean,
    required: false,
    default: void 0
  },
  rtl: {
    type: Boolean,
    required: false,
    default: void 0
  },
  isIn: {
    type: Boolean,
    required: false,
    default: void 0
  },
  progress: {
    type: Number,
    required: false,
    default: void 0
  },
  closeToast: {
    type: Function,
    required: false,
    default: void 0
  }
};
var je = defineComponent({
  name: "ProgressBar",
  props: ze,
  // @ts-ignore
  setup(e, {
    attrs: t
  }) {
    const n = ref(), o = computed(() => e.hide ? "true" : "false"), a = computed(() => ({
      ...t.style || {},
      animationDuration: `${e.autoClose === true ? 5e3 : e.autoClose}ms`,
      animationPlayState: e.isRunning ? "running" : "paused",
      opacity: e.hide ? 0 : 1,
      transform: e.controlledProgress ? `scaleX(${e.progress})` : "none"
    })), s = computed(() => [`${r.CSS_NAMESPACE}__progress-bar`, e.controlledProgress ? `${r.CSS_NAMESPACE}__progress-bar--controlled` : `${r.CSS_NAMESPACE}__progress-bar--animated`, `${r.CSS_NAMESPACE}__progress-bar-theme--${e.theme}`, `${r.CSS_NAMESPACE}__progress-bar--${e.type}`, e.rtl ? `${r.CSS_NAMESPACE}__progress-bar--rtl` : null].filter(Boolean).join(" ")), d = computed(() => `${s.value} ${(t == null ? void 0 : t.class) || ""}`), E = () => {
      n.value && (n.value.onanimationend = null, n.value.ontransitionend = null);
    }, u = () => {
      e.isIn && e.closeToast && e.autoClose !== false && (e.closeToast(), E());
    }, C = computed(() => e.controlledProgress ? null : u), c = computed(() => e.controlledProgress ? u : null);
    return watchEffect(() => {
      n.value && (E(), n.value.onanimationend = C.value, n.value.ontransitionend = c.value);
    }), () => createVNode("div", {
      ref: n,
      role: "progressbar",
      "aria-hidden": o.value,
      "aria-label": "notification timer",
      class: d.value,
      style: a.value
    }, null);
  }
});
var Ge = defineComponent({
  name: "CloseButton",
  inheritAttrs: false,
  props: {
    theme: {
      type: String,
      required: false,
      default: $.AUTO
    },
    type: {
      type: String,
      required: false,
      default: $.LIGHT
    },
    ariaLabel: {
      type: String,
      required: false,
      default: "close"
    },
    closeToast: {
      type: Function,
      required: false,
      default: void 0
    }
  },
  setup(e) {
    return () => createVNode("button", {
      class: `${r.CSS_NAMESPACE}__close-button ${r.CSS_NAMESPACE}__close-button--${e.theme}`,
      type: "button",
      onClick: (t) => {
        t.stopPropagation(), e.closeToast && e.closeToast(t);
      },
      "aria-label": e.ariaLabel
    }, [createVNode("svg", {
      "aria-hidden": "true",
      viewBox: "0 0 14 16"
    }, [createVNode("path", {
      "fill-rule": "evenodd",
      d: "M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z"
    }, null)])]);
  }
});
var V = ({
  theme: e,
  type: t,
  path: n,
  ...o
}) => createVNode("svg", mergeProps({
  viewBox: "0 0 24 24",
  width: "100%",
  height: "100%",
  fill: e === "colored" ? "currentColor" : `var(--toastify-icon-color-${t})`
}, o), [createVNode("path", {
  d: n
}, null)]);
function Ve(e) {
  return createVNode(V, mergeProps(e, {
    path: "M23.32 17.191L15.438 2.184C14.728.833 13.416 0 11.996 0c-1.42 0-2.733.833-3.443 2.184L.533 17.448a4.744 4.744 0 000 4.368C1.243 23.167 2.555 24 3.975 24h16.05C22.22 24 24 22.044 24 19.632c0-.904-.251-1.746-.68-2.44zm-9.622 1.46c0 1.033-.724 1.823-1.698 1.823s-1.698-.79-1.698-1.822v-.043c0-1.028.724-1.822 1.698-1.822s1.698.79 1.698 1.822v.043zm.039-12.285l-.84 8.06c-.057.581-.408.943-.897.943-.49 0-.84-.367-.896-.942l-.84-8.065c-.057-.624.25-1.095.779-1.095h1.91c.528.005.84.476.784 1.1z"
  }), null);
}
function Qe(e) {
  return createVNode(V, mergeProps(e, {
    path: "M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm.25 5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm2.25 13.5h-4a1 1 0 010-2h.75a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-.75a1 1 0 010-2h1a2 2 0 012 2v4.75a.25.25 0 00.25.25h.75a1 1 0 110 2z"
  }), null);
}
function We(e) {
  return createVNode(V, mergeProps(e, {
    path: "M12 0a12 12 0 1012 12A12.014 12.014 0 0012 0zm6.927 8.2l-6.845 9.289a1.011 1.011 0 01-1.43.188l-4.888-3.908a1 1 0 111.25-1.562l4.076 3.261 6.227-8.451a1 1 0 111.61 1.183z"
  }), null);
}
function Ke(e) {
  return createVNode(V, mergeProps(e, {
    path: "M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z"
  }), null);
}
function Ye() {
  return createVNode("div", {
    class: `${r.CSS_NAMESPACE}__spinner`
  }, null);
}
var te = {
  info: Qe,
  warning: Ve,
  success: We,
  error: Ke,
  spinner: Ye
};
var Ze = (e) => e in te;
function Xe({
  theme: e,
  type: t,
  isLoading: n,
  icon: o
}) {
  let a;
  const s = {
    theme: e,
    type: t
  };
  return n ? a = te.spinner() : o === false ? a = void 0 : k(o) ? a = toRaw(o) : L(o) ? a = o(s) : isVNode(o) ? a = cloneVNode(o, s) : ee(o) || De(o) ? a = o : Ze(t) && (a = te[t](s)), a;
}
var Je = () => {
};
function et(e, t, n = r.COLLAPSE_DURATION) {
  const { scrollHeight: o, style: a } = e, s = n;
  requestAnimationFrame(() => {
    a.minHeight = "initial", a.height = o + "px", a.transition = `all ${s}ms`, requestAnimationFrame(() => {
      a.height = "0", a.padding = "0", a.margin = "0", setTimeout(t, s);
    });
  });
}
function tt(e) {
  const t = ref(false), n = ref(false), o = ref(false), a = ref(H.Enter), s = reactive({
    ...e,
    appendPosition: e.appendPosition || false,
    collapse: typeof e.collapse > "u" ? true : e.collapse,
    collapseDuration: e.collapseDuration || r.COLLAPSE_DURATION
  }), d = s.done || Je, E = computed(() => s.appendPosition ? `${s.enter}--${s.position}` : s.enter), u = computed(() => s.appendPosition ? `${s.exit}--${s.position}` : s.exit), C = computed(() => e.pauseOnHover ? {
    onMouseenter: q,
    onMouseleave: B
  } : {});
  function c() {
    const S = E.value.split(" ");
    y().addEventListener(
      K.ENTRANCE_ANIMATION_END,
      B,
      { once: true }
    );
    const I = (P) => {
      const M = y();
      P.target === M && (M.dispatchEvent(new Event(K.ENTRANCE_ANIMATION_END)), M.removeEventListener("animationend", I), M.removeEventListener("animationcancel", I), a.value === H.Enter && P.type !== "animationcancel" && M.classList.remove(...S));
    }, _ = () => {
      const P = y();
      P.classList.add(...S), P.addEventListener("animationend", I), P.addEventListener("animationcancel", I);
    };
    e.pauseOnFocusLoss && A(), _();
  }
  function v() {
    if (!y())
      return;
    const S = () => {
      const _ = y();
      _.removeEventListener("animationend", S), s.collapse ? et(_, d, s.collapseDuration) : d();
    }, I = () => {
      const _ = y();
      a.value = H.Exit, _ && (_.className += ` ${u.value}`, _.addEventListener("animationend", S));
    };
    n.value || (o.value ? S() : setTimeout(I));
  }
  function y() {
    return e.toastRef.value;
  }
  function A() {
    document.hasFocus() || q(), window.addEventListener("focus", B), window.addEventListener("blur", q);
  }
  function Q() {
    window.removeEventListener("focus", B), window.removeEventListener("blur", q);
  }
  function B() {
    (!e.loading.value || e.isLoading === void 0) && (t.value = true);
  }
  function q() {
    t.value = false;
  }
  function ge(S) {
    S && (S.stopPropagation(), S.preventDefault()), n.value = false;
  }
  return watchEffect(v), watchEffect(() => {
    const S = x();
    n.value = S.findIndex((I) => I.toastId === s.toastId) > -1;
  }), watchEffect(() => {
    e.isLoading !== void 0 && (e.loading.value ? q() : B());
  }), onMounted(c), onUnmounted(() => {
    e.pauseOnFocusLoss && Q();
  }), {
    isIn: n,
    isRunning: t,
    hideToast: ge,
    eventHandlers: C
  };
}
var nt = defineComponent({
  name: "ToastItem",
  inheritAttrs: false,
  props: fe,
  // @ts-ignore
  setup(e) {
    const t = ref(), n = computed(() => !!e.isLoading), o = computed(() => e.progress !== void 0 && e.progress !== null), a = computed(() => Xe(e)), s = computed(() => [`${r.CSS_NAMESPACE}__toast`, `${r.CSS_NAMESPACE}__toast-theme--${e.theme}`, `${r.CSS_NAMESPACE}__toast--${e.type}`, e.rtl ? `${r.CSS_NAMESPACE}__toast--rtl` : void 0, e.toastClassName || ""].filter(Boolean).join(" ")), {
      isRunning: d,
      isIn: E,
      hideToast: u,
      eventHandlers: C
    } = tt({
      toastRef: t,
      loading: n,
      done: () => {
        N.remove(e.toastId);
      },
      ...le(e.transition),
      ...e
    });
    return () => createVNode("div", mergeProps({
      id: e.toastId,
      class: s.value,
      style: e.toastStyle || {},
      ref: t,
      "data-testid": `toast-item-${e.toastId}`,
      onClick: (c) => {
        e.closeOnClick && u(), e.onClick && e.onClick(c);
      }
    }, C.value), [createVNode("div", {
      role: e.role,
      "data-testid": "toast-body",
      class: `${r.CSS_NAMESPACE}__toast-body ${e.bodyClassName || ""}`
    }, [a.value != null && createVNode("div", {
      "data-testid": `toast-icon-${e.type}`,
      class: [`${r.CSS_NAMESPACE}__toast-icon`, e.isLoading ? "" : `${r.CSS_NAMESPACE}--animate-icon ${r.CSS_NAMESPACE}__zoom-enter`].join(" ")
    }, [k(a.value) ? h(toRaw(a.value), {
      theme: e.theme,
      type: e.type
    }) : L(a.value) ? a.value({
      theme: e.theme,
      type: e.type
    }) : a.value]), createVNode("div", {
      "data-testid": "toast-content"
    }, [k(e.content) ? h(toRaw(e.content), {
      toastProps: toRaw(e),
      closeToast: u,
      data: e.data
    }) : L(e.content) ? e.content({
      toastProps: toRaw(e),
      closeToast: u,
      data: e.data
    }) : e.dangerouslyHTMLString ? h("div", {
      innerHTML: e.content
    }) : e.content])]), (e.closeButton === void 0 || e.closeButton === true) && createVNode(Ge, {
      theme: e.theme,
      closeToast: (c) => {
        c.stopPropagation(), c.preventDefault(), u();
      }
    }, null), k(e.closeButton) ? h(toRaw(e.closeButton), {
      closeToast: u,
      type: e.type,
      theme: e.theme
    }) : L(e.closeButton) ? e.closeButton({
      closeToast: u,
      type: e.type,
      theme: e.theme
    }) : null, createVNode(je, {
      className: e.progressClassName,
      style: e.progressStyle,
      rtl: e.rtl,
      theme: e.theme,
      isIn: E.value,
      type: e.type,
      hide: e.hideProgressBar,
      isRunning: d.value,
      autoClose: e.autoClose,
      controlledProgress: o.value,
      progress: e.progress,
      closeToast: e.isLoading ? void 0 : u
    }, null)]);
  }
});
var ot = defineComponent({
  name: "ToastifyContainer",
  inheritAttrs: false,
  props: fe,
  // @ts-ignore
  setup(e) {
    const t = computed(() => e.containerId), n = computed(() => f[t.value] || []), o = computed(() => n.value.filter((a) => a.position === e.position));
    return () => createVNode(Fragment, null, [o.value.map((a) => {
      const {
        toastId: s = ""
      } = a;
      return createVNode(nt, mergeProps({
        key: s
      }, a), null);
    })]);
  }
});
var W = false;
function me() {
  const e = [];
  return x().forEach((n) => {
    const o = document.getElementById(n.containerId);
    o && !o.classList.contains(j) && e.push(n);
  }), e;
}
function at(e) {
  const t = me().length, n = e != null ? e : 0;
  return n > 0 && t + p.items.length >= n;
}
function st(e) {
  at(e.limit) && !e.updateId && p.items.push({
    toastId: e.toastId,
    containerId: e.containerId,
    toastContent: e.content,
    toastProps: e
  });
}
function O(e, t, n = {}) {
  if (W)
    return;
  n = G(ke(), t, n), (!n.toastId || typeof n.toastId != "string" && typeof n.toastId != "number") && (n.toastId = ce()), n = {
    ...n,
    content: e,
    containerId: n.containerId || String(n.position)
  };
  const o = Number(n == null ? void 0 : n.progress);
  return o < 0 && (n.progress = 0), o > 1 && (n.progress = 1), n.theme === "auto" && (n.theme = He()), st(n), n.multiple ? p.items.length || X(e, n) : (W = true, i.clearAll(void 0, false), setTimeout(() => {
    X(e, n);
  }, 0), setTimeout(() => {
    W = false;
  }, 390)), n.toastId;
}
var i = (e, t) => O(e, g.DEFAULT, t);
i.info = (e, t) => O(e, g.DEFAULT, {
  ...t,
  type: g.INFO
});
i.error = (e, t) => O(e, g.DEFAULT, {
  ...t,
  type: g.ERROR
});
i.warning = (e, t) => O(e, g.DEFAULT, {
  ...t,
  type: g.WARNING
});
i.warn = i.warning;
i.success = (e, t) => O(e, g.DEFAULT, {
  ...t,
  type: g.SUCCESS
});
i.loading = (e, t) => O(e, g.DEFAULT, G(t, {
  isLoading: true,
  autoClose: false,
  closeOnClick: false,
  closeButton: false,
  draggable: false
}));
i.dark = (e, t) => O(e, g.DEFAULT, G(t, {
  theme: $.DARK
}));
i.remove = (e) => {
  e ? N.dismiss(e) : N.clear();
};
i.clearAll = (e, t) => {
  N.clear(e, t);
};
i.isActive = (e) => {
  let t = false;
  return t = me().findIndex((o) => o.toastId === e) > -1, t;
};
i.update = (e, t = {}) => {
  setTimeout(() => {
    const n = xe(e);
    if (n) {
      const o = toRaw(n), {
        content: a
      } = o, s = {
        ...o,
        ...t,
        toastId: t.toastId || e,
        updateId: ce()
      }, d = s.render || a;
      delete s.render, O(d, s.type, s);
    }
  }, 0);
};
i.done = (e) => {
  i.update(e, {
    isLoading: false,
    progress: 1
  });
};
i.promise = rt;
function rt(e, {
  pending: t,
  error: n,
  success: o
}, a) {
  let s;
  t && (s = ee(t) ? i.loading(t, a) : i.loading(t.render, {
    ...a,
    ...t
  }));
  const d = {
    isLoading: void 0,
    autoClose: null,
    closeOnClick: null,
    closeButton: null,
    draggable: null,
    delay: 100
  }, E = (C, c, v) => {
    if (c == null) {
      i.remove(s);
      return;
    }
    const y = {
      type: C,
      ...d,
      ...a,
      data: v
    }, A = ee(c) ? {
      render: c
    } : c;
    return s ? i.update(s, {
      ...y,
      ...A,
      isLoading: false,
      autoClose: true
    }) : i(A.render, {
      ...y,
      ...A,
      isLoading: false,
      autoClose: true
    }), v;
  }, u = L(e) ? e() : e;
  return u.then((C) => E("success", o, C)).catch((C) => E("error", n, C)), u;
}
i.POSITION = w;
i.THEME = $;
i.TYPE = g;
i.TRANSITIONS = Te;
var it = {
  install(e, t = {}) {
    lt(t);
  }
};
typeof window < "u" && (window.Vue3Toastify = it);
function lt(e = {}) {
  const t = G(ie, e);
  Ue(t);
}
export {
  H as AnimationStep,
  Ae as Bounce,
  _e as Flip,
  Ne as Slide,
  N as ToastActions,
  ot as ToastifyContainer,
  Ie as Zoom,
  ue as addExitAnimateToNode,
  we as appendFromQueue,
  $e as cacheRenderInstance,
  Be as clearContainers,
  R as containerInstances,
  it as default,
  X as doAppend,
  x as getAllToast,
  xe as getToast,
  de as globalOptions,
  p as queue,
  Z as removeContainer,
  i as toast,
  f as toastContainers,
  lt as updateGlobalOptions,
  tt as useCssTransition
};
//# sourceMappingURL=vue3-toastify.js.map
